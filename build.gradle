plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco' // JaCoCo 플러그인 추가
}

// aCoCo 설정 추가
jacoco {
    toolVersion = "0.8.10" // 최신 안정 버전
}

jacocoTestReport {
    dependsOn test
    reports {
        html.required.set(true)
        xml.required.set(true)
        csv.required.set(false)
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // ✅ 테스트 완료 후 리포트 자동 생성
}

group = 'kr.or.aladin'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    /* 핵심 스타터 */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    /* SQLite JDBC 드라이버 (최신 안정 버전) */
    runtimeOnly 'org.xerial:sqlite-jdbc:3.45.2.0'
    implementation 'org.hibernate.orm:hibernate-community-dialects' // diarect

    /* Swagger */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    /* JWT */
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5' // Jackson 직렬화

    /* ───────── OAuth2 Client (소셜 로그인) ───────── */
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose' // JWK·JWT 처리

    /* 편의성 */
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    /* 테스트 */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
